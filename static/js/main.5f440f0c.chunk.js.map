{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","markdownText","setMarkdownText","tableOfContentsRegex","RegExp","useEffect","fetch","then","response","ok","text","Promise","reject","skippedTableOfContents","replace","catch","error","console","className","source","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAgCeA,MA5Bf,WAAgB,IAAD,EAC6BC,mBAAS,IADtC,mBACJC,EADI,KACUC,EADV,KAILC,EAAuB,IAAIC,OAAO,2CAexC,OAbAC,qBAAU,WACNC,MAJc,2FAKTC,MAAK,SAACC,GACH,OAAIA,EAASC,GAAWD,EAASE,OACrBC,QAAQC,OAAO,kCAE9BL,MAAK,SAACG,GACH,IAAIG,EAAyBH,EAAKI,QAAQX,EAAsB,IAChED,EAAgBW,MAEnBE,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,SAIpC,qBAAKE,UAAU,qBAAf,SACI,qBAAKA,UAAU,2BAAf,SACI,cAAC,IAAD,CAAeC,OAAQlB,SCdxBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.5f440f0c.chunk.js","sourcesContent":["import './App.css';\nimport ReactMarkdown from 'react-markdown'\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n    const [markdownText, setMarkdownText] = useState('');\n\n    const readmeUrl = \"https://raw.githubusercontent.com/LukaszLapaj/raspberry-pi-cheat-sheet/master/README.md\";\n    const tableOfContentsRegex = new RegExp(\"# Table of contents[\\\\s\\\\S]*?[\\\\n](?=#)\");\n\n    useEffect(() => {\n        fetch(readmeUrl)\n            .then((response) => {\n                if (response.ok) return response.text();\n                else return Promise.reject(\"Didn't fetch text correctly\");\n            })\n            .then((text) => {\n                let skippedTableOfContents = text.replace(tableOfContentsRegex, \"\");\n                setMarkdownText(skippedTableOfContents);\n            })\n            .catch((error) => console.error(error));\n    });\n\n    return (\n        <div className=\"markdown-container\">\n            <div className=\"markdown-container-inner\">\n                <ReactMarkdown source={markdownText}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}